# 128K SXROM

MEMORY
{
	ZP:     start =   $10, size =  $F0;
	STACK:  start =  $100, size =  $100;
	RAM:    start =  $200, size =  $600;
	
	HEADER: start =     0, size =   $10, fill=yes;

	SRAM0:	start = $6000, size = $1FFF;
	SRAM1:	start = $6000, size = $1FFF;
	SRAM2:	start = $6000, size = $1FFF;
	SRAM3:	start = $6000, size = $1FFF;
	
	ROM_00:    start = $8000, size = $3FF2, fill=yes, fillval=$FF;
	RESET_BANKED:	start = $FFF2, size = $0E, fill=yes;
	ROM_01:    start = $8000, size = $4000, fill=yes, fillval=$FF;
	ROM_02:    start = $8000, size = $4000, fill=yes, fillval=$FF;
	ROM_03:    start = $8000, size = $4000, fill=yes, fillval=$FF;
	ROM_04:    start = $8000, size = $4000, fill=yes, fillval=$FF;
	ROM_05:    start = $8000, size = $4000, fill=yes, fillval=$FF;
	ROM_06:    start = $8000, size = $4000, fill=yes, fillval=$FF;

	ROM_FIXED:	start = $C000, size = $0C00, fill=yes, fillval=$FF;
	ROM_DPCM:	start = $CC00, size = $33F2, fill=yes, fillval=$00;
	RESET_FIXED:	start = $FFF2, size = $0E, fill=yes;
	#VECTORS:	start = $FFF2, size =    $E, fill=yes;
}

# align allow .align N up to that amount

SEGMENTS
{
	ZEROPAGE:   load = ZP,      type = zp;
	STACK:      load = STACK,   type = bss,align=$100, optional=yes;
	BSS:        load = RAM,     type = bss,align=$200;
	RAM:		load = RAM	type = bss,align=$100;
	
	SRAM0:		load = SRAM0	type = bss,align=$100;
	SRAM1:		load = SRAM1	type = bss,align=$100;
	SRAM2:		load = SRAM2	type = bss,align=$100;
	SRAM3:		load = SRAM3	type = bss,align=$100;
	
	HEADER:     load = HEADER,  type = ro;

	CODE_00:	load = ROM_00, type=ro, align=$200;
	RESET_00:	load = RESET_BANKED, type=ro;
	CODE_01:       load = ROM_01,     type = ro, align=$200;
	CODE_02:       load = ROM_02,     type = ro, align=$200;
	CODE_03:       load = ROM_03,     type = ro, align=$200;
	CODE_04:       load = ROM_04,     type = ro, align=$200;
	CODE_05:       load = ROM_05,     type = ro, align=$200;
	CODE_06:       load = ROM_06,     type = ro, align=$200;
	
	CODE_FIXED:       load = ROM_FIXED,     type = ro, align=$200;
	DPCM:	load = ROM_DPCM,	type=ro, align=$200;
	RESET_FIXED:	load=RESET_FIXED, type=ro;
	#VECTORS:    load = VECTORS, type = ro;
}
